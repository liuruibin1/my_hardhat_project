/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { RuinToken, RuinTokenInterface } from "../../contracts/RuinToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200118e3803806200118e83398101604081905262000034916200028a565b6040805180820182526009815268293ab4b72a37b5b2b760b91b602080830191825283518085019094526004845263292aa4a760e11b9084015281519192916200008191600391620001e4565b50805162000097906004906020840190620001e4565b505050620000b4620000ae620000c760201b60201c565b620000cb565b620000c033826200011d565b5062000345565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0382166200014f5760405162461bcd60e51b81526004016200014690620002a3565b60405180910390fd5b6200015d60008383620001df565b8060026000828254620001719190620002e3565b90915550506001600160a01b038216600081815260208190526040808220805485019055517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90620001c5908590620002da565b60405180910390a3620001db60008383620001df565b5050565b505050565b828054620001f29062000308565b90600052602060002090601f01602090048101928262000216576000855562000261565b82601f106200023157805160ff191683800117855562000261565b8280016001018555821562000261579182015b828111156200026157825182559160200191906001019062000244565b506200026f92915062000273565b5090565b5b808211156200026f576000815560010162000274565b6000602082840312156200029c578081fd5b5051919050565b6020808252601f908201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604082015260600190565b90815260200190565b600082198211156200030357634e487b7160e01b81526011600452602481fd5b500190565b6002810460018216806200031d57607f821691505b602082108114156200033f57634e487b7160e01b600052602260045260246000fd5b50919050565b610e3980620003556000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c8063715018a611610097578063a457c2d711610066578063a457c2d7146101f3578063a9059cbb14610206578063dd62ed3e14610219578063f2fde38b1461022c57610100565b8063715018a6146101bb5780638da5cb5b146101c357806395d89b41146101d85780639dc29fac146101e057610100565b8063313ce567116100d3578063313ce5671461016b578063395093511461018057806340c10f191461019357806370a08231146101a857610100565b806306fdde0314610105578063095ea7b31461012357806318160ddd1461014357806323b872dd14610158575b600080fd5b61010d61023f565b60405161011a91906109e8565b60405180910390f35b6101366101313660046109a0565b6102d1565b60405161011a91906109dd565b61014b6102f3565b60405161011a9190610d8d565b610136610166366004610965565b6102f9565b610173610327565b60405161011a9190610d96565b61013661018e3660046109a0565b61032c565b6101a66101a13660046109a0565b610358565b005b61014b6101b6366004610912565b61039d565b6101a66103bc565b6101cb6103d0565b60405161011a91906109c9565b61010d6103df565b6101a66101ee3660046109a0565b6103ee565b6101366102013660046109a0565b610420565b6101366102143660046109a0565b610468565b61014b610227366004610933565b610480565b6101a661023a366004610912565b6104ab565b60606003805461024e90610dc8565b80601f016020809104026020016040519081016040528092919081815260200182805461027a90610dc8565b80156102c75780601f1061029c576101008083540402835291602001916102c7565b820191906000526020600020905b8154815290600101906020018083116102aa57829003601f168201915b5050505050905090565b6000806102dc6104e5565b90506102e98185856104e9565b5060019392505050565b60025490565b6000806103046104e5565b905061031185828561059d565b61031c8585856105e7565b506001949350505050565b601290565b6000806103376104e5565b90506102e98185856103498589610480565b6103539190610da4565b6104e9565b6103606106e8565b6001600160a01b03821661038f5760405162461bcd60e51b815260040161038690610bc5565b60405180910390fd5b6103998282610727565b5050565b6001600160a01b0381166000908152602081905260409020545b919050565b6103c46106e8565b6103ce60006107d1565b565b6005546001600160a01b031690565b60606004805461024e90610dc8565b6001600160a01b03821633146104165760405162461bcd60e51b815260040161038690610bee565b6103998282610823565b60008061042b6104e5565b905060006104398286610480565b90508381101561045b5760405162461bcd60e51b815260040161038690610d11565b61031c82868684036104e9565b6000806104736104e5565b90506102e98185856105e7565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6104b36106e8565b6001600160a01b0381166104d95760405162461bcd60e51b815260040161038690610ac0565b6104e2816107d1565b50565b3390565b6001600160a01b03831661050f5760405162461bcd60e51b815260040161038690610ccd565b6001600160a01b0382166105355760405162461bcd60e51b815260040161038690610b06565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92590610590908590610d8d565b60405180910390a3505050565b60006105a98484610480565b905060001981146105e157818110156105d45760405162461bcd60e51b815260040161038690610b48565b6105e184848484036104e9565b50505050565b6001600160a01b03831661060d5760405162461bcd60e51b815260040161038690610c88565b6001600160a01b0382166106335760405162461bcd60e51b815260040161038690610a3b565b61063e8383836108f6565b6001600160a01b038316600090815260208190526040902054818110156106775760405162461bcd60e51b815260040161038690610b7f565b6001600160a01b0380851660008181526020819052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906106d5908690610d8d565b60405180910390a36105e18484846108f6565b6106f06104e5565b6001600160a01b03166107016103d0565b6001600160a01b0316146103ce5760405162461bcd60e51b815260040161038690610c12565b6001600160a01b03821661074d5760405162461bcd60e51b815260040161038690610d56565b610759600083836108f6565b806002600082825461076b9190610da4565b90915550506001600160a01b038216600081815260208190526040808220805485019055517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906107bd908590610d8d565b60405180910390a3610399600083836108f6565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0382166108495760405162461bcd60e51b815260040161038690610c47565b610855826000836108f6565b6001600160a01b0382166000908152602081905260409020548181101561088e5760405162461bcd60e51b815260040161038690610a7e565b6001600160a01b0383166000818152602081905260408082208585039055600280548690039055519091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906108e6908690610d8d565b60405180910390a36108f6836000845b505050565b80356001600160a01b03811681146103b757600080fd5b600060208284031215610923578081fd5b61092c826108fb565b9392505050565b60008060408385031215610945578081fd5b61094e836108fb565b915061095c602084016108fb565b90509250929050565b600080600060608486031215610979578081fd5b610982846108fb565b9250610990602085016108fb565b9150604084013590509250925092565b600080604083850312156109b2578182fd5b6109bb836108fb565b946020939093013593505050565b6001600160a01b0391909116815260200190565b901515815260200190565b6000602080835283518082850152825b81811015610a14578581018301518582016040015282016109f8565b81811115610a255783604083870101525b50601f01601f1916929092016040019392505050565b60208082526023908201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526022908201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604082015261636560f01b606082015260800190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b60208082526022908201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604082015261737360f01b606082015260800190565b6020808252601d908201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604082015260600190565b60208082526026908201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604082015265616c616e636560d01b606082015260800190565b6020808252600f908201526e61646472657373206973207a65726f60881b604082015260600190565b6020808252600a9082015269313ab9371032b93937b960b11b604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526021908201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736040820152607360f81b606082015260800190565b60208082526025908201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604082015264647265737360d81b606082015260800190565b60208082526024908201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646040820152637265737360e01b606082015260800190565b60208082526025908201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604082015264207a65726f60d81b606082015260800190565b6020808252601f908201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604082015260600190565b90815260200190565b60ff91909116815260200190565b60008219821115610dc357634e487b7160e01b81526011600452602481fd5b500190565b600281046001821680610ddc57607f821691505b60208210811415610dfd57634e487b7160e01b600052602260045260246000fd5b5091905056fea26469706673582212207bae2d863bf18dc8734e590ff30d9597a7efd03bd147f2c909505b10c4141fdc64736f6c63430008000033";

type RuinTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RuinTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RuinToken__factory extends ContractFactory {
  constructor(...args: RuinTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    amount: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<RuinToken> {
    return super.deploy(amount, overrides || {}) as Promise<RuinToken>;
  }
  override getDeployTransaction(
    amount: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(amount, overrides || {});
  }
  override attach(address: string): RuinToken {
    return super.attach(address) as RuinToken;
  }
  override connect(signer: Signer): RuinToken__factory {
    return super.connect(signer) as RuinToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RuinTokenInterface {
    return new utils.Interface(_abi) as RuinTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RuinToken {
    return new Contract(address, _abi, signerOrProvider) as RuinToken;
  }
}
